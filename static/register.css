/* Center the .container and .phones-container horizontally and vertically */
body {
    background: radial-gradient(circle, #d1c8ff, #96b5ff);
    margin: 0;
    padding: 0;
    overflow: hidden;
    display: flex;
    justify-content: center; /* Center horizontally */
    align-items: center; /* Center vertically */
    height: 100vh; /* Ensure the body takes the full viewport height */
}

h1 {
    font-size: 20px; /* Adjust the desired font size */
    font-family: 'Courier New', sans-serif; /* Specify the desired font family */
}


/* Update CSS for the Left Container */
.container {
    z-index: 1;
    background: linear-gradient(to bottom, #d1c8ff, #96b5ff);
    border: 2px solid #d1c8ff;
    padding: 20px;
    border-radius: 10px;
    width: 300px;
    text-align: center;
    transition: background 0.3s;
    opacity: 1; /* Set opacity to 1 (fully opaque) */
    box-shadow: 5px 0px 10px rgba(0, 0, 0, 0.5); /* Add shadow on the right side */
}


/* Update CSS for the Right Container with Phones Images */
.phones-container {
    position: absolute;
    left: auto; /* Remove the left property */
    top: 50%;
    transform: translateY(-50%);
    width: 200px;
    height: 200px;
    margin-left: -300px;
}

/* Add styling for the button separator */
.button-separator {
    width: 100%;
    border-top: 1px solid rgba(209, 200, 255, 0.5); /* Transparent light purple line */
    margin: 10px 0; /* Adjust the margin as needed */
}

/* Add styling for the button separator */
.button-separator {
    width: 100%;
    border-top: 1px solid rgba(209, 200, 255, 0.5); /* Transparent light purple line */
    margin: 10px 0; /* Adjust the margin as needed */
}

/* Style the custom links */
/* Style the custom links with light purple color */
.custom-link {
    text-decoration: underline;
    font-weight: bold;
    color: darkpurple; /* Light purple link color */
    cursor: pointer;
    transition: color 0.3s; /* Add a smooth color transition on hover */
}

.custom-link:hover {
    color: purple; /* Change link color to a slightly different shade of light purple on hover */
}



/* Update CSS for Individual Phone Images */
.phone-image {
    position: absolute;
    width: 200px;
    height: auto;
    overflow: hidden;
    transition: opacity 0.5s ease;
}

/* Offset and animate the second phone to the left */
.phone-image:nth-child(1) {
    top: 0;
    left: 0;
}

.phone-image:nth-child(2) {
    top: 20px;
    right: 0;
    animation: slideLeft 4s infinite alternate;
    z-index: 1;
}

@keyframes slideLeft {
    from {
        transform: translateX(0);
    }
    to {
        transform: translateX(-60px);
    }
}

.phone-image img {
    width: 100%;
    height: auto;
    opacity: 0;
    transition: opacity 0.5s ease;
}

/* Make the first image visible initially */
.phone-image img:first-child {
    opacity: 1;
}


/* Bubble Styles */
.bubble-container {
    position: absolute;
    width: 100%;
    height: 100%;
}

.bubble {
    width: 372px; /* Double the width */
    height: 372px; /* Double the height */
    border-radius: 50%;
    position: absolute;
    background: purple;
    border: 2px solid lightpurple;
    overflow: hidden;
    animation: bubble 3s infinite, pop 4s forwards;
}

.bubble img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
}

@keyframes bubble {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-372px); /* Adjusted for double size */
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes pop {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    100% {
        transform: scale(1);
        opacity: 0;
    }
}

.phone-screen {
    position: absolute;
    top: 55px; /* Adjust the top position */
    left: 17px; /* Adjust the left position */
    width: 88%; /* Adjust the width */
    height: 72%; /* Adjust the height */
    overflow: hidden;
    object-fit: cover;
    opacity: 0.9;
}

.phone-screen-android img {
    position: absolute;
    top: 9px; /* Adjust the top position */
    left: 8px; /* Adjust the left position */
    width: 92%; /* Adjust the width */
    height: 93%; /* Adjust the height */
    object-fit: cover; /* This property ensures the image fills the container while maintaining its aspect ratio */
    opacity: 0.9;
}


/* Add your existing CSS styles below */
/* Set a fixed width for the password input */
.password-toggle {
    position: relative;
    width: 100%; /* You can adjust this width as needed */
}

/* Ensure the toggle-eye span remains visible */
.password-toggle .toggle-eye::before {
    content: "üëÅ"; /* Unicode for the eye icon */
    font-family: "Font Awesome"; /* You may need to change this to the appropriate icon font family */
    display: inline-block;
    cursor: pointer;
    position: relative;
    top: -6px;
    /* Add any other styling as needed */
}



/* Set a fixed width for the password input */
.password-toggle .password-input {
    width: 100%; /* Set the width to 100% to match other input fields */
    padding: 10px;
    margin-bottom: 15px;
    border: none;
    border-radius: 5px;
    background-color: #eee;
    color: #333;
    box-sizing: border-box; /* Ensure padding doesn't affect the width */
}


/* Set a fixed width for the toggle button */
.password-toggle .toggle-eye {
    position: absolute;
    top: 50%;
    right: 10px;
    width: 40px; /* Set a fixed width for the toggle button */
    transform: translateY(-50%);
    cursor: pointer;
}

/* Initial style for the eye icon (hidden) */
.password-toggle .toggle-eye.hide-password::before {
    content: "ü´£"; /* Unicode for a crossed-out eye icon (hidden) */
}

/* Style for the eye icon when password is visible */
.password-toggle .toggle-eye.show-password::before {
    content: "üëÄ"; /* Unicode for an open eye icon (visible) */
}


/* Add any other existing CSS styles you have */


form {
    margin: 0;
    padding: 0;
    margin-bottom: 5px;
}

label {
    display: block;
    margin-bottom: 5px;
}

/* Update CSS for input fields */
/* Style all input fields to have the same width */
input[type="text"],
input[type="email"] {
    width: 90%; /* Set the width to 100% to make them all the same width */
    padding: 10px;
    margin-bottom: 15px;
    border: none;
    border-radius: 5px;
    background-color: #eee;
    color: #333;
}

input[type="password"] {
    width: 93%; /* Set the width to 100% to make them all the same width */
    padding: 10px;
    margin-bottom: 15px;
    border: none;
    border-radius: 5px;
    background-color: #eee;
    color: #333;
}


/* Style the placeholders (username and password text) */
input[type="text"]::placeholder,
input[type="password"]::placeholder,
input[type="email"]::placeholder {
    color: #777; /* Set a slightly lighter grey color for the placeholders */
}

/* Remove default input styles, including the box-shadow */
input[type="text"]:focus,
input[type="password"]:focus,
input[type="email"]:focus {
    outline: none;
    /* Add any additional focus styles you prefer */
}

/* Add transition for smooth placeholder transition */
input[type="text"]::placeholder,
input[type="password"]::placeholder,
input[type="email"]::placeholder {
    transition: color 0.3s ease;
}

/* Hide the placeholders when text is entered */
input[type="text"]:not(:placeholder-shown),
input[type="password"]:not(:placeholder-shown),
input[type="email"]:not(:placeholder-shown) {
    color: #333; /* Set text color for entered text */
}

/* Add a subtle border to distinguish the input fields */
input[type="text"],
input[type="password"],
input[type="email"] {
    border: 1px solid #ccc;
}

/* Login button */
/* Define a keyframe animation for sliding in from right to left */
@keyframes slideFromRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

input[type="submit"] {
    width: 100%;
    padding: 10px;
    border: none;
    border-radius: 5px;
    color: white;
    font-weight: bold;
    cursor: pointer;
    margin-top: 10px;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: 16px;
    outline: none;
    position: relative; /* Add relative positioning to create the gradient overlay */
    overflow: hidden; /* Hide the overflowing gradient */
    z-index: 1; /* Place the button content above the gradient */
    background: none; /* Remove the background color */
    /* Add a linear gradient as a background image */
    background-image: linear-gradient(to right, #007bff, #00408d);
    /* Set the background size to 200% so the gradient spans the entire button width */
    background-size: 200% 100%;
    /* Add a transition to smoothly change the background position */
    transition: background-position 0.3s ease;
}

/* Apply the slide-in animation when the button is clicked */
input[type="submit"]:active::before {
    content: "";
    position: absolute;
    top: 0;
    left: 100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, #007bff, #00408d);
    animation: slideFromRight 0.5s ease;
    z-index: -1;
}

/* On hover, change the background position to create a slide-in effect */
input[type="submit"]:hover {
    background-position: -100% 0;
}


/* ---------------------------------------------------*/


.small-text {
    font-size: 12px;
    color: #ccc;
    margin-top: 5px; /* Add margin to separate from previous input */
}

.error {
    color: red;
    margin-top: 5px; /* Add margin to separate from previous input */
}

.register-link {
    margin-top: 15px; /* Add margin to separate from previous input */
}

/* Add this to your style.css */
.logout-message {
    text-align: center;
    margin-top: 10px;
    font-size: 14px;
}

.logout-msg {
    font-size: 14px;
    font-weight: bold;
    color: red;
    padding: 0;
    margin: 0;
    display: inline-block;
    list-style: none;
}

.login-button {
    color: red;
}